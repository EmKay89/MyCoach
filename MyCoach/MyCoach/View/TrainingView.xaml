<UserControl x:Class="MyCoach.View.TrainingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyCoach.View"
             xmlns:viewmodels="clr-namespace:MyCoach.ViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="Button" x:Key="StartStopButton" BasedOn="{StaticResource DefaultButton}">
            <Setter Property="Content" Value="Start"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding TrainingActive}" Value="True">
                    <Setter Property="Content" Value="Stop"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="ShowTrainingSettings">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="300">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideTrainingSettings">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="300"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <!--The following code is an alternative way to start the animations based on TrainingActive.
    The drawback is that the animation ShowTrainingSettings always started when the UserControl
    was loaded and not only when a property changed. Two NuGet packs were installed for this.
    <i:Interaction.Triggers>
        <ei:DataTrigger Binding="{Binding TrainingActive, Mode=OneWay}" Value="True">
            <ei:ControlStoryboardAction Storyboard="{StaticResource HideTrainingSettings}" ControlStoryboardOption="Play"/>
        </ei:DataTrigger>
        <ei:DataTrigger Binding="{Binding TrainingActive, Mode=OneWay}" Value="False">
            <ei:ControlStoryboardAction Storyboard="{StaticResource ShowTrainingSettings}" ControlStoryboardOption="Play"/>
        </ei:DataTrigger>
    </i:Interaction.Triggers>-->
    <DockPanel>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
            <Button Command="{Binding StartTrainingCommand}"
                    Style="{StaticResource StartStopButton}"/>
            <Button Content="Timer"
                    Style="{StaticResource DefaultButton}"
                    Click="TimerButton_Click"/>
        </StackPanel>
        <StackPanel x:Name="stackPanel" 
            DockPanel.Dock="Right" 
            Width="300">
            <StackPanel>
                <Label Content="Modus"
                       FontWeight="Bold"/>
                <ComboBox Style="{StaticResource DefaultComboBox}"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding ModesWithCaption}"
                          SelectedValue="{Binding TrainingMode}"
                          DisplayMemberPath="Value" 
                          SelectedValuePath="Key"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <Image Source="/Resources/InfoIcon.jpg"
                       Stretch="None"
                       ToolTipService.ShowDuration="30000"
                       ToolTipService.InitialShowDelay="300"
                       Cursor="Help">
                    <Image.ToolTip>
                        <ToolTip Width="600">
                            <TextBlock Text="{Binding ModeExplanation}"
                                       TextWrapping="WrapWithOverflow"/>
                        </ToolTip>
                    </Image.ToolTip>
                </Image>
            </StackPanel>
            <StackPanel Visibility="{Binding SingleCategorySelectionVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Label Content="Kategorie"
                       FontWeight="Bold"/>
                <ComboBox Style="{StaticResource DefaultComboBox}"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding ActiveCategories}"
                          SelectedIndex="0"
                          SelectedValue="{Binding CategoryInFocus}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
            </StackPanel>
            <StackPanel Visibility="{Binding MultipleCategorySelectionVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Label Content="Aktive Übungskategorien" FontWeight="Bold"/>
                <CheckBox Content="{Binding CategoryWarmUpName}"
                          IsChecked="{Binding CategoryWarmUpEnabledForTraining}"
                          Visibility="{Binding CategoryWarmUpActive, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category1Name}" 
                          IsChecked="{Binding Category1EnabledForTraining}"
                          Visibility="{Binding Category1Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category2Name}"
                          IsChecked="{Binding Category2EnabledForTraining}"
                          Visibility="{Binding Category2Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category3Name}" 
                          IsChecked="{Binding Category3EnabledForTraining}"
                          Visibility="{Binding Category3Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category4Name}"
                          IsChecked="{Binding Category4EnabledForTraining}"
                          Visibility="{Binding Category4Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category5Name}"
                          IsChecked="{Binding Category5EnabledForTraining}"
                          Visibility="{Binding Category5Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category6Name}"
                          IsChecked="{Binding Category6EnabledForTraining}"
                          Visibility="{Binding Category6Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category7Name}"
                          IsChecked="{Binding Category7EnabledForTraining}"
                          Visibility="{Binding Category7Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding Category8Name}"
                          IsChecked="{Binding Category8EnabledForTraining}"
                          Visibility="{Binding Category8Active, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
                <CheckBox Content="{Binding CategoryCoolDownName}" 
                          IsChecked="{Binding CategoryCoolDownEnabledForTraining}"
                          Visibility="{Binding CategoryCoolDownActive, Converter={StaticResource BoolToVisibilityConverter}}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
            </StackPanel>
            <StackPanel Visibility="{Binding LapCountSelectionVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Label Content="Runden" FontWeight="Bold"/>
                <ComboBox Style="{StaticResource DefaultComboBox}"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding NumbersOneToFour}"
                          SelectedValue="{Binding LapCount}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
            </StackPanel>
            <StackPanel Visibility="{Binding ExercisesPerLapSelectionVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Label Content="Anzahl Übungen je Runde" FontWeight="Bold"/>
                <ComboBox Style="{StaticResource DefaultComboBox}"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding NumbersOneToTen}"
                          SelectedValue="{Binding ExercisesPerLap}"
                          IsEnabled="{Binding TrainingSettingsEnabled}"/>
            </StackPanel>
            <Image Source="/Resources/InfoIcon.jpg"
                   Stretch="None"
                   ToolTipService.ShowDuration="30000"
                   ToolTipService.InitialShowDelay="300"
                   Cursor="Help"
                   Visibility="{Binding NotEnoughExercisesAvailable, Converter={StaticResource BoolToVisibilityConverter}}">
                <Image.ToolTip>
                    <ToolTip Width="600">
                        <TextBlock Text="Hinweis: Es sind nicht genug Übungen vorhanden, um mit den gewählten Einstellungen ein vollständiges Training zu erstellen. Du kannst mehr Übungen hinzufügen oder in den Einstellungen das Wiederholen von Übungen im Training erlauben."
                                   TextWrapping="WrapWithOverflow"/>
                    </ToolTip>
                </Image.ToolTip>
            </Image>
            <StackPanel Visibility="{Binding MultiplyerSelectionVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Label Content="Multiplikator für Wiederholungen und Punkte" FontWeight="Bold"/>
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding Multiplyer}"
                        IsEnabled="{Binding TrainingSettingsEnabled}"
                        Width="100"/>
                    <TextBlock Text="%"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Visibility="{Binding LoadingSavingButtonsVisisble, Converter={StaticResource BoolToVisibilityConverter}}">
                <Label Content="Training laden oder speichern" FontWeight="Bold"/>
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource DefaultButton}"
                        Content="Laden"
                        Command="{Binding ImportTrainingCommand}"/>
                    <Button Style="{StaticResource DefaultButton}"
                        Content="Speichern"
                        Command="{Binding ExportTrainingCommand}"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <ItemsControl BorderBrush="LightGray"
                      BorderThickness="1"
                      Margin="10"
                      ItemsSource="{Binding Training}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <local:TrainingElementView/>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DockPanel>
</UserControl>
